version: '3.9'
services:
  ontocloakdemo:
    platform: linux/amd64
    image: quay.io/aehrc/ontocloak:4.1
    command:
      - start
      - --import-realm
      # --optimized is needed for keycloak to function properly
      - --optimized
    environment:
      KC_DB: ${KC_DB}
      KC_DB_URL_HOST: postgres_ontocloak_demo
      KC_DB_URL_DATABASE: ${KC_DB_URL_DATABASE}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_SCHEMA: ${KC_SCHEMA}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HOSTNAME_STRICT: 'false'
      KC_HTTPS_CERTIFICATE_FILE: /etc/x509/https/tls.crt
      KC_HTTPS_CERTIFICATE_KEY_FILE: /etc/x509/https/tls.key
      KEYCLOAK_FRONTEND_URL: https://localhost:8443/auth
      JAVA_OPTS_APPEND: -Dontocloak.action.agreement.enduser.version=1.0 -Dontocloak.action.agreement.enduser.title='Acme End User Agreement v1.0' -Dontocloak.action.agreement.enduser.html_text='Some end user agreement text' -Dontocloak.action.agreement.customer.version=1.0 -Dontocloak.action.agreement.customer.title='Acme Customer Agreement v1.0' -Dontocloak.action.agreement.customer.html_text='Some customer agreement text'
    ports: 
      - "8443:8443"
    volumes: 
        - ./certs/ontocloak/server.crt:/etc/x509/https/tls.crt
        - ./certs/ontocloak/server.key:/etc/x509/https/tls.key
        - ./realms/onto-realm.json:/opt/keycloak/data/import/onto-realm.json:ro

    depends_on:
      postgres_ontocloak_demo:
        condition: service_healthy
    networks:
      - ontocloak_demo_dev_network
  
  postgres_ontocloak_demo:
    image: postgres:14.2
    command: postgres -c 'max_connections=200'
    volumes: 
      - pgdata_ontocloak_demo:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${KC_DB_URL_DATABASE}
      POSTGRES_USER: ${KC_DB_USERNAME}
      POSTGRES_PASSWORD: ${KC_DB_PASSWORD}
    healthcheck:
      test: "exit 0"
    ports:
      - "5436:5432"
    networks:
      - ontocloak_demo_dev_network

  atomio:
    platform: linux/amd64
    image: quay.io/aehrc/atomio:1
    container_name: atomio
    environment:
      # The 'aud' in the token generated by keycloak for this client
      - atomio.security.audience=atomio
      - atomio.security.hsts=true
      # Whether this server is to be secured by tokens
      - atomio.security.enabled=true
      - atomio.security.anonymousFeedRead=true
      - atomio.cors.allowedOriginPatterns=ALL
      # The location of the issuer of tokens
      - atomio.security.issuer-uri=${ATOMIO_REALM_ENDPOINT}
      - JAVA_TOOL_OPTIONS=-Djavax.net.ssl.trustStore=/usr/lib/jvm/java-17-openjdk/lib/security/truststore -Djavax.net.ssl.trustStorePassword=changeit
    depends_on:
      - ontocloakdemo
    ports:
      - "3000:8080"
    volumes: 
        - ./certs/ontocloak/truststore:/usr/lib/jvm/java-17-openjdk/lib/security/truststore
    networks:
      - ontocloak_demo_dev_network
    restart: always

  db:
    image: postgres
    container_name: db
    volumes:
      - onto-pg-data:/var/lib/postgresql/data
    environment:
      - TZ=${TZ}
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
      - ontocloak_demo_dev_network
  
  cache:
    build: ontocache
    container_name: ontocache_stack
    depends_on:
      - ontoserver
    ports:
      - "8000:80"
      - "8444:443"
    environment:
      - TZ=${TZ}
    networks:
      - ontocloak_demo_dev_network

  ontoserver:
    image: quay.io/aehrc/ontoserver:ctsa-6
    container_name: ontoserver-stack
    depends_on:
      - ontocloakdemo
      - postgres_ontocloak_demo
      - db
    environment:
      # A list of all environment configs is available here: https://ontoserver.csiro.au/docs/6/config-all.html
      - ontoserver.fhir.base=https://localhost:8000/fhir
      - ontoserver.fhir.header.cacheControl=must-revalidate,max-age=1
      # enables role based security in ontoserver
      - ontoserver.security.enabled=true
      # readonly settings for each endpoint, by default this is set to false
      - ontoserver.security.readOnly.api=false
      - ontoserver.security.readOnly.fhir=false
      - ontoserver.security.readOnly.synd=false
      # This needs to be the public key for your realm, go to https://ontocloakdemo:8443/auth/admin/master/console/#/{{realmName}}/realm-settings/keys and copy the public key from rs256
      - ontoserver.security.token.secret=${ONTOSERVER_SECURITY_SECRET}
      - conformance.security.description=This is a description that you can use to describe how oauth works with this server
      # this is featured in the machine-readable ConformanceStatement and should point to the "authorize" url of your keycloak installation
      - conformance.security.authorize=https://localhost:8443/auth/realms/ontoserver/protocol/openid-connect/auth 
      # The token endpoint
      - conformance.security.token=https://localhost:8443/auth/realms/ontoserver/protocol/openid-connect/token
      - conformance.security.kinds=SMART-on-fhir
      - conformance.security.audience=https://localhost:8000/fhir 
      - JAVA_OPTS=-Xmx8G
      - ontoserver.security.verify.certs=false
      # The location of the upstream syndication server
      - atom.syndication.feedLocation=${ATOMIO_FEED_LOCATION}
      # Hostname (including protocol, e.g. http:// or https://) for which to provide OAuth2 credentials when requesting content
      - authentication.oauth.endpoint.1=${ATOMIO_BASE_URL}
      # OAuth client ID to send when requesting a system token for use in requesting content from authentication.oauth.endpoint.{n}
      - authentication.oauth.endpoint.client_id.1=atomio
      # Client secret to send when requesting an OAuth2 system token for use in requesting content from authentication.oauth.endpoint.{n}
      - authentication.oauth.endpoint.client_secret.1=goztCc8ZqJOgMmxlvEk3UWNMEvIcuhSB
      #  Strategy (basic_auth or body) to use when requesting an OAuth2 system token for use in requesting content authentication.oauth.endpoint.{n}
      - authentication.oauth.endpoint.strategy.1=basic_auth
      # Token endpoint URL for requesting an OAuth token for use in retrieving content from authentication.oauth.endpoint.{n}
      - authentication.oauth.endpoint.token_endpoint.1=https://localhost:8443/auth/realms/ontoserver/protocol/openid-connect/token
      - TZ=${TZ}
    volumes:
      - onto-data:/var/onto
    logging:
      options:
        max-size: 1024m
    networks:
      - ontocloak_demo_dev_network

volumes: 
  pgdata_ontocloak_demo:
  onto-pg-data:
  onto-data:
networks:
  ontocloak_demo_dev_network:
    driver: bridge

  

